---
import '../styles.css';
---

<nav class="navbar-bg">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
                <!-- Logo and Home Link -->
                <div class="flex-shrink-0">
                    <img src="../assets/brain-logo.svg" class="mr-3 h-6 sm:h-9" alt="Logo"/> 
                </div>
                <div class="flex-shrink-0">
                    <a href="/" class="navbar-text"><b>KunjML</b></a>
                </div>

                <!-- Navigation Links -->
                <div class="hidden md:block">
                    <div class="ml-10 flex items-baseline space-x-4">
                        <a href="/projects" class="navbar-text"><b>Projects</b></a>
                        <a href="/blogs" class="navbar-text"><b>Blogs</b></a>
                        <!-- <a href="/resume" class="navbar-text"><b>Resume</b></a> -->
                    </div>
                </div>
            </div>

            <div class="block">
                <div class="ml-4 flex items-center md:ml-6">
                    <!-- Dark Mode Toggle Slider -->
                    <div class="toggle-container">
                        <label class="switch">
                            <input type="checkbox" id="theme-toggle">
                            <span class="slider round"></span>
                        </label>
                    </div>

                    <!-- Other Navbar Items -->
                    <a href="https://www.linkedin.com/in/kunj-patel7/" class="navbar-text" target="_blank" rel="noopener noreferrer">
                        <img src="../assets/light-mode-linkedin.svg" class="inline h-6 w-6 theme-icon" alt="LinkedIn" data-theme-light="../assets/light-mode-linkedin.svg" data-theme-dark="../assets/dark-mode-linkedin.svg"/>
                    </a>

                    <a href="https://github.com/KunjVPatel" class="navbar-text" target="_blank" rel="noopener noreferrer">
                        <img src="../assets/light-github-mark.svg" class="inline h-6 w-6 theme-icon" alt="GitHub" data-theme-light="../assets/light-github-mark.svg" data-theme-dark="../assets/dark-github-mark.svg"/>
                    </a>


                    <div class="dropdown">
                        <button class="dropbtn">
                            <img src="../assets/light-mode-menu.svg" class="inline h-6 w-6 theme-icon" alt="Menu" data-theme-light="../assets/light-mode-menu.svg" data-theme-dark="../assets/dark-mode-menu.svg"/>
                        </button>
                        
                        <div class="dropdown-content">
                            <a href="/projects">Projects</a>
                            <a href="/blogs">Blogs</a>
                            <!-- <a href="/resume">Resume</a> -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</nav>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Get the checkbox for theme toggling and assert the correct type
        const themeToggleCheckbox = document.getElementById('theme-toggle') as HTMLInputElement | null;
    
        // Query all theme icons and ensure each is handled as an HTMLImageElement
        const themeIcons = document.querySelectorAll('.theme-icon');
    
        // Function to update the source of each theme icon based on the current theme
        function updateThemeIcons(theme: string): void {
            themeIcons.forEach(icon => {
                const img = icon as HTMLImageElement; // Assert the correct type
                img.src = img.getAttribute(theme === 'dark' ? 'data-theme-dark' : 'data-theme-light')!;
            });
        }
    
        // Function to switch the theme; adds/removes a class from the document element
        function switchTheme(isDark: boolean): void {
            if (isDark) {
                document.documentElement.classList.add('dark');
                localStorage.setItem('themePreference', 'dark');
                updateThemeIcons('dark');
            } else {
                document.documentElement.classList.remove('dark');
                localStorage.setItem('themePreference', 'light');
                updateThemeIcons('light');
            }
        }
    
        // Initial setup: Check stored preferences or system settings for theme
        if (themeToggleCheckbox) {
            const prefersDarkMode = localStorage.getItem('themePreference') === 'dark' || 
                                    (!localStorage.getItem('themePreference') && window.matchMedia('(prefers-color-scheme: dark)').matches);
            themeToggleCheckbox.checked = prefersDarkMode; // Set the checkbox based on the preference
            switchTheme(prefersDarkMode); // Apply the initial theme based on the preference
    
            // Listen for changes on the checkbox to toggle theme
            themeToggleCheckbox.addEventListener('change', () => {
                switchTheme(themeToggleCheckbox.checked);
            });
        }
    });
    </script>
    